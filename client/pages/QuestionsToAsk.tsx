import { MobileStatusBar } from "@/components/ui/mobile-status-bar";
import { BottomNavigation } from "@/components/ui/bottom-navigation";
import { Button } from "@/components/ui/button";
import { ChevronLeft, Search, SlidersHorizontal, Check } from "lucide-react";
import { Link } from "react-router-dom";
import { useState } from "react";

export default function QuestionsToAsk() {
  const [selectedQuestions, setSelectedQuestions] = useState<number[]>([0, 1, 2, 4]);

  const cardiologyQuestions = [
    "Is my diastolic pressure of 100 mmHg dangerous even if my systolic is normal?",
    "What could be causing the BP spike in July â€” is it heat, stress, or something more serious?",
    "Are there specific medications, habits, or foods that could be raising my diastolic BP?"
  ];

  const endocrinologyQuestions = [
    "Is my blood pressure pattern linked to insulin resistance or diabetes?",
    "Would a high-fiber, low-GI diet help manage both BP and blood sugar?",
    "Should I get tested for diabetes or prediabetes (HbA1c, fasting glucose)?",
    "What symptoms of diabetes should I watch for at my age?"
  ];

  const toggleQuestion = (index: number) => {
    setSelectedQuestions(prev => 
      prev.includes(index) 
        ? prev.filter(i => i !== index)
        : [...prev, index]
    );
  };

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col max-w-md mx-auto">
      <MobileStatusBar />
      
      {/* Header */}
      <div className="bg-white px-6 py-4 flex items-center gap-3">
        <Link to="/medbot">
          <Button size="icon" variant="ghost" className="text-black">
            <ChevronLeft className="w-6 h-6" />
          </Button>
        </Link>
        <div className="flex-1">
          <h1 className="text-xl font-bold text-black">Questions to Ask Doctor</h1>
          <p className="text-sm text-gray-600">Generated by AI Assistant</p>
        </div>
      </div>

      {/* Search and Filter */}
      <div className="px-6 py-4 bg-teal-200 space-y-3">
        <div className="relative">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500 w-4 h-4" />
          <input
            type="text"
            placeholder="Search"
            className="w-full pl-10 pr-4 py-2 rounded-full bg-white border border-gray-300 text-black placeholder-gray-500"
          />
        </div>
        
        <div className="flex gap-3">
          <Button variant="outline" className="flex items-center gap-2 bg-white border-gray-300 text-black">
            <span>Sort</span>
            <svg className="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path d="M6 9L12 15L18 9" strokeWidth={2} strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </Button>
          <Button variant="outline" className="flex items-center gap-2 bg-white border-gray-300 text-black">
            <SlidersHorizontal className="w-4 h-4" />
            <span>Filter</span>
            <div className="w-5 h-5 bg-blue-500 rounded-full flex items-center justify-center">
              <span className="text-white text-xs font-bold">2</span>
            </div>
          </Button>
        </div>
      </div>

      {/* Content */}
      <div className="flex-1 px-6 py-6 space-y-6 overflow-y-auto pb-24">
        {/* Cardiology Section */}
        <div className="bg-white rounded-3xl p-6 space-y-4">
          <h2 className="text-xl font-bold text-black">Cardiology</h2>
          <div className="space-y-4">
            {cardiologyQuestions.map((question, index) => (
              <div key={index} className="flex items-start gap-3">
                <button
                  onClick={() => toggleQuestion(index)}
                  className={`w-5 h-5 rounded border-2 flex items-center justify-center mt-0.5 flex-shrink-0 ${
                    selectedQuestions.includes(index)
                      ? 'bg-black border-black'
                      : 'border-gray-300'
                  }`}
                >
                  {selectedQuestions.includes(index) && (
                    <Check className="w-3 h-3 text-white" />
                  )}
                </button>
                <p className="text-black text-sm leading-relaxed">{question}</p>
              </div>
            ))}
            <input
              type="text"
              placeholder="Type here..."
              className="w-full px-3 py-2 border border-gray-300 rounded-lg text-black placeholder-gray-500 text-sm"
            />
          </div>
        </div>

        {/* Endocrinology Section */}
        <div className="bg-white rounded-3xl p-6 space-y-4">
          <h2 className="text-xl font-bold text-black">Endocrinology</h2>
          <div className="space-y-4">
            {endocrinologyQuestions.map((question, index) => {
              const questionIndex = index + cardiologyQuestions.length;
              return (
                <div key={questionIndex} className="flex items-start gap-3">
                  <button
                    onClick={() => toggleQuestion(questionIndex)}
                    className={`w-5 h-5 rounded border-2 flex items-center justify-center mt-0.5 flex-shrink-0 ${
                      selectedQuestions.includes(questionIndex)
                        ? 'bg-black border-black'
                        : 'border-gray-300'
                    }`}
                  >
                    {selectedQuestions.includes(questionIndex) && (
                      <Check className="w-3 h-3 text-white" />
                    )}
                  </button>
                  <p className="text-black text-sm leading-relaxed">{question}</p>
                </div>
              );
            })}
            <input
              type="text"
              placeholder="Type here"
              className="w-full px-3 py-2 border border-gray-300 rounded-lg text-black placeholder-gray-500 text-sm"
            />
          </div>
        </div>
      </div>

      <BottomNavigation />
    </div>
  );
}
